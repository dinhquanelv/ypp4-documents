IF DB_ID('MSListsV12') IS NULL
BEGIN
    CREATE DATABASE MSListsV12;
END;
GO

USE MSListsV12;
GO

IF OBJECT_ID('TrashItem', 'U') IS NOT NULL DROP TABLE TrashItem;
IF OBJECT_ID('ObjectType', 'U') IS NOT NULL DROP TABLE ObjectType;
IF OBJECT_ID('FileAttachment', 'U') IS NOT NULL DROP TABLE FileAttachment;
IF OBJECT_ID('ShareLinkUserAccess', 'U') IS NOT NULL DROP TABLE ShareLinkUserAccess;
IF OBJECT_ID('ShareLink', 'U') IS NOT NULL DROP TABLE ShareLink;
IF OBJECT_ID('Scope', 'U') IS NOT NULL DROP TABLE Scope;
IF OBJECT_ID('ListMemberPermission', 'U') IS NOT NULL DROP TABLE ListMemberPermission;
IF OBJECT_ID('Permission', 'U') IS NOT NULL DROP TABLE Permission;
IF OBJECT_ID('ListRowComment', 'U') IS NOT NULL DROP TABLE ListRowComment;
IF OBJECT_ID('ListCellValue', 'U') IS NOT NULL DROP TABLE ListCellValue;
IF OBJECT_ID('ListRow', 'U') IS NOT NULL DROP TABLE ListRow;
IF OBJECT_ID('ListColumnSettingObject', 'U') IS NOT NULL DROP TABLE ListColumnSettingObject;
IF OBJECT_ID('ListViewSetting', 'U') IS NOT NULL DROP TABLE ListViewSetting;
IF OBJECT_ID('ListColumnSettingValue', 'U') IS NOT NULL DROP TABLE ListColumnSettingValue;
IF OBJECT_ID('ListDynamicColumn', 'U') IS NOT NULL DROP TABLE ListDynamicColumn;
IF OBJECT_ID('SystemColumnSettingValue', 'U') IS NOT NULL DROP TABLE SystemColumnSettingValue;
IF OBJECT_ID('SystemColumn', 'U') IS NOT NULL DROP TABLE SystemColumn;
IF OBJECT_ID('ListView', 'U') IS NOT NULL DROP TABLE ListView;
IF OBJECT_ID('FavoriteList', 'U') IS NOT NULL DROP TABLE FavoriteList;
IF OBJECT_ID('List', 'U') IS NOT NULL DROP TABLE List;
IF OBJECT_ID('TemplateSampleCell', 'U') IS NOT NULL DROP TABLE TemplateSampleCell;
IF OBJECT_ID('TemplateSampleRow', 'U') IS NOT NULL DROP TABLE TemplateSampleRow;
IF OBJECT_ID('TemplateViewSetting', 'U') IS NOT NULL DROP TABLE TemplateViewSetting;
IF OBJECT_ID('TemplateColumn', 'U') IS NOT NULL DROP TABLE TemplateColumn;
IF OBJECT_ID('DataTypeSettingKey', 'U') IS NOT NULL DROP TABLE DataTypeSettingKey;
IF OBJECT_ID('KeySetting', 'U') IS NOT NULL DROP TABLE KeySetting;
IF OBJECT_ID('SystemDataType', 'U') IS NOT NULL DROP TABLE SystemDataType;
IF OBJECT_ID('TemplateView', 'U') IS NOT NULL DROP TABLE TemplateView;
IF OBJECT_ID('ViewTypeSetting', 'U') IS NOT NULL DROP TABLE ViewTypeSetting;
IF OBJECT_ID('ViewSetting', 'U') IS NOT NULL DROP TABLE ViewSetting;
IF OBJECT_ID('ViewType', 'U') IS NOT NULL DROP TABLE ViewType;
IF OBJECT_ID('ListTemplate', 'U') IS NOT NULL DROP TABLE ListTemplate;
IF OBJECT_ID('TemplateProvider', 'U') IS NOT NULL DROP TABLE TemplateProvider;
IF OBJECT_ID('ListType', 'U') IS NOT NULL DROP TABLE ListType;
IF OBJECT_ID('WorkspaceMember', 'U') IS NOT NULL DROP TABLE WorkspaceMember;
IF OBJECT_ID('Workspace', 'U') IS NOT NULL DROP TABLE Workspace;
IF OBJECT_ID('Account', 'U') IS NOT NULL DROP TABLE Account;

CREATE TABLE Account (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    FirstName NVARCHAR(50) NOT NULL,
    LastName NVARCHAR(100) NOT NULL,
    Email NVARCHAR(100) NOT NULL UNIQUE,
    AccountPassword NVARCHAR(50) NOT NULL,
    Avatar NVARCHAR(255),
    Company NVARCHAR(255),
    AccountStatus NVARCHAR(50) NOT NULL,
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE Workspace (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    WorkspaceName NVARCHAR(255) NOT NULL,
    Icon NVARCHAR(255),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE WorkspaceMember (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    AccountId INT NOT NULL FOREIGN KEY REFERENCES Account(Id),
    WorkspaceId INT NOT NULL FOREIGN KEY REFERENCES Workspace(Id),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE ListType (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    Title NVARCHAR(255) NOT NULL,
    Icon NVARCHAR(100),
    HeaderImage NVARCHAR(255),
    ListTypeDescription NVARCHAR(1000),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE TemplateProvider (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ProviderName NVARCHAR(255) NOT NULL,
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE ListTemplate (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    Title NVARCHAR(255) NOT NULL,
    HeaderImage NVARCHAR(255) NOT NULL,
    TemplateDescription NVARCHAR(255),
    Icon NVARCHAR(255),
    Color NVARCHAR(255),
    Sumary NVARCHAR(255),
    Feature NVARCHAR(255),
    ListTypeId INT NOT NULL FOREIGN KEY REFERENCES ListType(Id),
    TemplateProviderId INT NOT NULL FOREIGN KEY REFERENCES TemplateProvider(Id),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
)

CREATE TABLE ViewType (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    TypeName NVARCHAR(50) NOT NULL,
    DisplayName NVARCHAR(100),
    HeaderImage NVARCHAR(100),
    Icon NVARCHAR(100),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE ViewSetting (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    SettingKey NVARCHAR(50) NOT NULL,
    DisplayName NVARCHAR(100) NOT NULL,
    ValueType NVARCHAR(50) NOT NULL,
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE ViewTypeSetting (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ViewTypeId INT NOT NULL FOREIGN KEY REFERENCES ViewType(Id),
    ViewSettingId INT NOT NULL FOREIGN KEY REFERENCES ViewSetting(Id),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE TemplateView (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ViewName NVARCHAR(255) NOT NULL,
    ListTemplateId INT NOT NULL FOREIGN KEY REFERENCES ListTemplate(Id),
    ViewTypeId INT NOT NULL FOREIGN KEY REFERENCES ViewType(Id),
    DisplayOrder INT NOT NULL,
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE SystemDataType (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    Icon NVARCHAR(100) NOT NULL,
    TypeDescription NVARCHAR(100) NOT NULL,
    CoverImage NVARCHAR(100) NOT NULL,
    DisplayName NVARCHAR(100) NOT NULL,
    DataTypeValue NVARCHAR(100) NOT NULL,
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE KeySetting (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    KeyName NVARCHAR(100) NOT NULL,
    ValueType NVARCHAR(100) NOT NULL,
    DisplayName NVARCHAR(100) NOT NULL,
    IsDefaultValue NVARCHAR(100) NOT NULL,
    ValueOfDefault NVARCHAR(100) NOT NULL,
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE DataTypeSettingKey (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    SystemDataTypeId INT NOT NULL FOREIGN KEY REFERENCES SystemDataType(Id),
    KeySettingId INT NOT NULL FOREIGN KEY REFERENCES KeySetting(Id),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE TemplateColumn (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ColumnName NVARCHAR(255) NOT NULL,
    ColumnDescription NVARCHAR(1000),
    DisplayOrder INT NOT NULL DEFAULT 0,
    IsVisible BIT NOT NULL DEFAULT 1,
    SystemDataTypeId INT NOT NULL FOREIGN KEY REFERENCES SystemDataType(Id),
    ListTemplateId INT NOT NULL FOREIGN KEY REFERENCES ListTemplate(Id),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE TemplateViewSetting (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    TemplateViewId INT NOT NULL FOREIGN KEY REFERENCES TemplateView(Id),
    ViewTypeSettingId INT NOT NULL FOREIGN KEY REFERENCES ViewTypeSetting(Id),
    GroupByColumnId INT FOREIGN KEY REFERENCES TemplateColumn(Id),
    RawValue NVARCHAR(50),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE TemplateSampleRow (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ListTemplateId INT NOT NULL FOREIGN KEY REFERENCES ListTemplate(Id),
    DisplayOrder INT NOT NULL,
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE TemplateSampleCell (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    TemplateColumnId INT NOT NULL FOREIGN KEY REFERENCES TemplateColumn(Id),
    TemplateSampleRowId INT NOT NULL FOREIGN KEY REFERENCES TemplateSampleRow(Id),
    CellValue NVARCHAR(255),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE List (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ListName NVARCHAR(255) NOT NULL,
    Icon NVARCHAR(255) NOT NULL,
    Color NVARCHAR(255) NOT NULL,
    ListTypeId INT NOT NULL FOREIGN KEY REFERENCES ListType(Id),
    WorkspaceId INT NOT NULL FOREIGN KEY REFERENCES Workspace(Id),
    TemplateId INT NOT NULL FOREIGN KEY REFERENCES ListTemplate(Id),
    CreatedBy INT NOT NULL FOREIGN KEY REFERENCES Account(Id),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE FavoriteList (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ListId INT NOT NULL FOREIGN KEY REFERENCES List(Id),
    AccountId INT NOT NULL FOREIGN KEY REFERENCES Account(Id),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE ListView (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ListId INT NOT NULL FOREIGN KEY REFERENCES List(Id),
    ViewName NVARCHAR(255) NOT NULL,
    ViewTypeId INT NOT NULL FOREIGN KEY REFERENCES ViewType(Id),
    CreatedBy INT NOT NULL FOREIGN KEY REFERENCES Account(Id),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE SystemColumn (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ColumnName NVARCHAR(255) NOT NULL,
    ColumnDescription NVARCHAR(255) NOT NULL,
    DisplayOrder INT NOT NULL,
    SystemDataTypeId INT NOT NULL FOREIGN KEY REFERENCES SystemDataType(Id),
    IsVisible BIT NOT NULL DEFAULT 0,
    IsRequired BIT NOT NULL DEFAULT 0,
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE SystemColumnSettingValue (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ColumnId INT NOT NULL FOREIGN KEY REFERENCES SystemColumn(Id),
    DataTypeSettingKeyId INT NOT NULL FOREIGN KEY REFERENCES DataTypeSettingKey(Id),
    KeyValue NVARCHAR(255) NOT NULL,
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE ListDynamicColumn (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ListId INT NOT NULL FOREIGN KEY REFERENCES List(Id),
    ColumnName NVARCHAR(255) NOT NULL,
    ColumnDescription NVARCHAR(255) NOT NULL,
    DisplayOrder INT NOT NULL,
    SystemDataTypeId INT NOT NULL FOREIGN KEY REFERENCES SystemDataType(Id),
    IsVisible BIT NOT NULL DEFAULT 0,
    IsRequired BIT NOT NULL DEFAULT 0,
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE ListColumnSettingValue (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ColumnId INT NOT NULL FOREIGN KEY REFERENCES ListDynamicColumn(Id),
    DataTypeSettingKeyId INT NOT NULL FOREIGN KEY REFERENCES DataTypeSettingKey(Id),
    KeyValue NVARCHAR(255) NOT NULL,
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE ListViewSetting (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ListViewId INT NOT NULL FOREIGN KEY REFERENCES ListView(Id),
    ViewTypeSettingId INT NOT NULL FOREIGN KEY REFERENCES ViewTypeSetting(Id),
    GroupByColumnId INT FOREIGN KEY REFERENCES ListDynamicColumn(Id),
    RawValue NVARCHAR(255),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE ListColumnSettingObject (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ListDynamicColumnId INT FOREIGN KEY REFERENCES ListDynamicColumn(Id) NOT NULL,
    DisplayName NVARCHAR(255) NOT NULL,
    DisplayColor NVARCHAR(20) NOT NULL,
    DisplayOrder INT NOT NULL DEFAULT 0,
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
)

CREATE TABLE ListRow (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ListId INT NOT NULL FOREIGN KEY REFERENCES List(Id),
    DisplayOrder INT NOT NULL,
    CreatedBy INT NOT NULL FOREIGN KEY REFERENCES Account(Id),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE ListCellValue (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ListRowId INT NOT NULL FOREIGN KEY REFERENCES ListRow(Id),
    ListDynamicColumnId INT NOT NULL FOREIGN KEY REFERENCES ListDynamicColumn(Id),
    CellValue NVARCHAR(255) NOT NULL,
    ChoiceType NVARCHAR(100),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE ListRowComment (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ListRowId INT NOT NULL FOREIGN KEY REFERENCES ListRow(Id),
    Content NVARCHAR(255) NOT NULL,
    CreatedBy INT NOT NULL FOREIGN KEY REFERENCES Account(Id),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE Permission (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    PermissionCode NVARCHAR(50) NOT NULL,
    PermissionName NVARCHAR(100) NOT NULL,
    PermissionIcon NVARCHAR(50) NOT NULL,
    PermissionDescription NVARCHAR(50) NOT NULL,
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE ListMemberPermission (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ListId INT NOT NULL FOREIGN KEY REFERENCES List(Id),
    AccountId INT NOT NULL FOREIGN KEY REFERENCES Account(Id),
    HighestPermissionId INT NOT NULL FOREIGN KEY REFERENCES Permission(Id),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE Scope (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ScopeCode NVARCHAR(50) NOT NULL UNIQUE,
    ScopeName NVARCHAR(100) NOT NULL,
    ScopeIcon NVARCHAR(255),
    ScopeDescription NVARCHAR(255),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE ShareLink (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    TargetUrl NVARCHAR(500) NOT NULL,
    ListId INT NOT NULL FOREIGN KEY REFERENCES List(Id),
    ScopeId INT NOT NULL FOREIGN KEY REFERENCES Scope(Id),
    PermissionId INT NOT NULL FOREIGN KEY REFERENCES Permission(Id),
    Note NVARCHAR(500),
    ExpirationDate DATETIME,
    IsLoginRequired BIT NOT NULL DEFAULT 0,
    LinkPassword NVARCHAR(255),
    CreatedBy INT NOT NULL FOREIGN KEY REFERENCES Account(Id),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE ShareLinkUserAccess (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ShareLinkId INT NOT NULL FOREIGN KEY REFERENCES ShareLink(Id),
    AccountId INT NOT NULL FOREIGN KEY REFERENCES Account(Id),
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE FileAttachment (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ListRowId INT NOT NULL FOREIGN KEY REFERENCES ListRow(Id),
    NameFile NVARCHAR(255) NOT NULL,
    FileUrl  NVARCHAR(255) NOT NULL,
    Size NVARCHAR(100) NOT NULL,
    FileStatus NVARCHAR(100) NOT NULL,
    DeleteAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE ObjectType (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ObjectCode NVARCHAR(100),
    ObjectName NVARCHAR(255),
    ObjectIcon NVARCHAR(255),
    DeleteAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE TrashItem (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    ObjectId INT NOT NULL FOREIGN KEY REFERENCES ListColumnSettingObject(Id),
    ObjectTypeId INT NOT NULL FOREIGN KEY REFERENCES ObjectType(Id),
    PathItem NVARCHAR(255),
    CreateBy INT NOT NULL FOREIGN KEY REFERENCES Account(Id),
    DeletedBy INT NOT NULL FOREIGN KEY REFERENCES Account(Id),
    DeleteAt DATETIME NOT NULL DEFAULT GETDATE(),
    UpdateAt DATETIME NOT NULL DEFAULT GETDATE()
);
